import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle
import pdfplumber
from pdfminer.high_level import extract_pages
from pdfminer.layout import LTTextBox, LTTextLine

class DebugPDFParser(PDFParser):
    def visualize_page(self, pdf_path, page_number, tables, headings):
        """Visualize tables and headings on a PDF page."""
        with pdfplumber.open(pdf_path) as pdf:
            page = pdf.pages[page_number - 1]
            im = page.to_image()

            # Create a Matplotlib figure
            fig, ax = plt.subplots(1, figsize=(10, 15))
            ax.imshow(im.original)
            
            # Draw table bounding boxes
            for table in tables:
                x0, y0, x1, y1 = table["bbox"]
                rect = Rectangle(
                    (x0, im.original.size[1] - y1),
                    x1 - x0,
                    y1 - y0,
                    edgecolor="blue",
                    facecolor="none",
                    linewidth=2,
                    label="Table" if "Table" not in [p.get_label() for p in ax.patches] else ""
                )
                ax.add_patch(rect)

            # Draw heading bounding boxes
            for bbox, text in headings:
                x0, y0, x1, y1 = bbox
                rect = Rectangle(
                    (x0, im.original.size[1] - y1),
                    x1 - x0,
                    y1 - y0,
                    edgecolor="red",
                    facecolor="none",
                    linewidth=2,
                    label="Heading" if "Heading" not in [p.get_label() for p in ax.patches] else ""
                )
                ax.add_patch(rect)

            ax.legend(loc="upper right")
            plt.title(f"Visualization for Page {page_number}")
            plt.show()

    def debug_parse_pdf(self, pdf_path):
        table_data = self.extract_tables_from_pdf(pdf_path)
        section_headings = []  # (bbox, text)
        subsection_headings = []  # (bbox, text)

        for page_number, page_layout in enumerate(extract_pages(pdf_path), start=1):
            for element in page_layout:
                if isinstance(element, LTTextBox):
                    for line in element:
                        if isinstance(line, LTTextLine):
                            bbox = line.bbox
                            text = line.get_text().strip()
                            section_headings.append((bbox, text))  # Example: Log all text as "headings" for debugging
            # Visualize each page with tables and headings
            self.visualize_page(pdf_path, page_number, table_data.get(page_number, []), section_headings)
